# ========================================================================
#                       ENCRYPTION SECTION
# ========================================================================

# Ciphers, are algorithms that define the way of data encryption after successfull authentication
# Only modern algorithms are used

Ciphers aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes128-ctr

# MACs, Message Authentication Codes provide data integrity and authenticity over the session, prevents data tampering
# and packet injection attacks

MACs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512,hmac-sha2-256

# Key Exchange Algoritms, a way of defining a shared key that will be used by the ciphers to encrypt the session between
# 2 peers. a good algorithm prevents MITM, or guessing the session key.
# Remove the file /etc/ssh/moduli because diffie-hellman algorithms are not used.

KexAlgorithms mlkem768x25519-sha256,sntrup761x25519-sha512,sntrup761x25519-sha512@openssh.com

# A list of supported algorithms used during the KEX init process to identify the server to the client by a public host
# key and a kex signature that was made with the help of the private key
# Remove the ecdsa host key, won't be used anyway with this configuration.

HostKeyAlgorithms ssh-ed25519-cert-v01@openssh.com,ssh-ed25519,rsa-sha2-512-cert-v01@openssh.com,rsa-sha2-256-cert-v01@openssh.com,rsa-sha2-512,rsa-sha2-256

# This conf defines the minimum length of the RSA key that SSH will offer. the default is 3072 which is weak for
# modern standards, if possible avoid using RSA. The minimum recommended size for supported RSA keys are 4096 and higher
# which will increase security but slower operations.

RequiredRSASize 4096

# A list of public/private key algorithms used for authenticating users, if a user will try to use ecdsa keys to authenticate
# it will fail. only the defines algorithms are supported in this configuration.

PubkeyAcceptedAlgorithms ssh-ed25519-cert-v01@openssh.com,rsa-sha2-512-cert-v01@openssh.com,rsa-sha2-256-cert-v01@openssh.com,ssh-ed25519,rsa-sha2-512,rsa-sha2-256

# A list of accepted algorithms that are used during host based authentication type

HostbasedAcceptedAlgorithms ssh-ed25519-cert-v01@openssh.com,rsa-sha2-512-cert-v01@openssh.com,rsa-sha2-256-cert-v01@openssh.com,ssh-ed25519,rsa-sha2-512,rsa-sha2-256

# Explicitly specified private host key, must have 600 permissions and the algorithm must be allowed in HostKeyAlgorithms
# possible to set the host key to be a public key which will increase security only in case the private keys
# are stored externally on HSM, in that case cryptographic operations related to private keys will be performed
# by the ssh-agent.

HostKey /etc/ssh/ssh_host_rsa_key
HostKey /etc/ssh/ssh_host_ed25519_key

# This parameter specifies the path to the file that contains DH groups used for KexAlgorithms from DH family
# In this configuration the DH algorithms are completley disabled so there is no need to specify it, anyway
# define it explicitly.

ModuliFile /etc/ssh/moduli

# When a connection is received, a fingerprint hash of the users public key is stored encrypted with the specified
# algorithm, explicitly define sha256

FingerprintHash sha256

# If SSH operates with Certificates to authenticate users, then the list specify which algorithms are used to sign
# the user key.

CASignatureAlgorithms ssh-ed25519,rsa-sha2-512,rsa-sha2-256

# If certificates are used by the environment, the HostCertificate specifies its own signed public key that is sent
# to the clients during SSH init process to verify itself. the private key of the signed certificate must be specified
# with HostKey. the default is not specifying a host certificate.

# HostCertificate

# If Certificates are used, then this parameter contains the public key of the CA that is used to verify user key
# signature and authority. like authorized_keys file but contains a single signed public certifiacte that is used
# to check given signed private keys.

TrustedUserCAKeys none

# This configuration allows to control the amount of data sent over a single key negotiation process. default equals to size and none is time
# for example you can set 1G 1h and one of them is gonna be applied for each session, either after 1G of data transmitted, or every 1 hour.
# avaliable sizes metrics are K, M, G.

RekeyLimit default none

# ========================================================================
#                       AUTHENTICATION SECTION
# ========================================================================

# Disables the ability to use passwords for authentication which prevents brute force attacks, rainbow tables, and completley
# removes an entire attack surface related to passwords.

PasswordAuthentication no

# In case password authentication is permitted then its recommended to explicitly disable empty password authentication
# this type of authentication does no authenticate users

PermitEmptyPasswords no

# Disables the ability to authenticate as the root user, recommended to use this user locally only and in emergancy scenarios

PermitRootLogin no

# Enables to authenticate users with private/public keys, recommended to use and avoid using passwords

PubkeyAuthentication yes

# This param gives you the ability to specify which authentication methods you want your system to supported

AuthenticationMethods publickey

# Specifies if host based authentication is allowed on the server, explicilty set to no

HostbasedAuthentication no

# An option that allows a sort of 2FA by requiring users to physically authenticate them selves, avaliable only if the FIDO library is 
# integrated into OpenSSH, the possible values are touch-requried/verify-required. relevant only for environments that use SK algorithms
# for user authentication.

PubkeyAuthOptions none

# ========================================================================
#                       X SECTION
# ========================================================================

# In case the X11 forwarding is enabled, this param states which address should be binded to the x11 server.
# set to yes in order to bind it to the localhost address to block access from outside.

X11UseLocalhost yes

# This param specifies the binary that is used to authenticate X11 connections and provide the COOKIE
# never set to 'none', in that case if the server is accidentally running X11 there will be no authentication 

XAuthLocation /usr/X11R6/bin/xauth

# Only relevant if X11Forwarding is enabled, sets the first avaliable display number

X11DisplayOffset 10

# ========================================================================
#                       FORWARDING SECTION
# ========================================================================

# Allows using SSH to forward X11 traffic, the X11 traffic is wrapped in SSH tunnel, disable this option explicitly 
# to avoid unnecessary connections and traffic.

X11Forwarding no

# Allows to forward ssh agent socket to use private keys remotely, if enabled allows to use the server as an
# intermediate server without exposing private keys, usefull only if the server is ment to be used as an
# intermediate server.

AllowAgentForwarding no

# Allows using the SSH Daemon as a local/remote/dynamic proxy server for TCP traffic, usefull only in case the 
# SSH server is planned to be used as a proxy server. form security perspective recommended to completley 
# disable the feature.

AllowTcpForwarding no

# Very simmilar to TCP forwarding, but refers to UNIX domain sockets represented as files. every socket file is locally
# stored somewhere in the filesystem and belongs to some daemon which offer services. forwarding this type of sockets
# allows users to interact with local sockets.

AllowStreamLocalForwarding no

# A single parameter that disable every forwarding parameter stated above, including ssh-agent/TCP/stream/x11.

DisableForwarding yes

# ========================================================================
#                    GSSAPI + Kerberos SECTION
# ========================================================================

# Another form of providing SSH authentication, uses a seperate authentication method, for example Kerberos,
# provides an SSO by using TGT cache in case kerberos is used. can also be used with other authentication
# systems, mostly usable in domain environments, enable only if needed.

GSSAPIAuthentication no

# Relevant if GSSAPIAuthentication is set ot yes, on logout clears user credential data

GSSAPICleanupCredentials yes

# Checks for hostname when authenticating to a server, for exmpale if user authenticates to S1.domain.com
# the tockets name must be S1.domain.com. if set to no then authentication can happen on another machine
# set to yse in order to avoid interception, enable only if required.

GSSAPIStrictAcceptorCheck yes

# Enables Kerberos passwrod verification, when user authenticates to the SSH server, the SSH daemon would request
# validation from the KDC to confirm the user password. works onlu if PasswordAuthentication is set to yes

KerberosAuthentication no

# Deprecated technology, if the SSH host has AFS and KerberosGetAFSToken set to yes, then gets access to the AFS
# which is not used, set to no to shrink attack vector.

KerberosGetAFSToken no

# If Kerberos password verification by KDC fails, the check the password with another authentication programm, in
# case Kerberos explicitly was configured to be used as user authentication system, then disable other authentication
# methods.

KerberosOrLocalPasswd no

# If Kerberos is used for user authenticity then on logout destroy any cache that contains user credenntial in it.

KerberosTicketCleanup yes

# ========================================================================
#                    GENERAL SECTION           
# ========================================================================

# As part of the SSH protocol standards, the initial negotiation contains the protocol version and the software version in a 
# form of <SSH-version-software comment> for example "SSH-2.0-OpenSSH_9.6p1 Ubuntu-3ubuntu13.14" is the default 
# SSH protocol version exchange banner on Ubuntu distributions, unfortunately you can't change the comment section which reveals 
# the local distribution on a default build because its embedded into sshd binary. This is a security flaw that allows the 
# attacker to get the distro thats being used by the server. explicitly specify none to avoid any information to be revealed

VersionAddendum none

# When login prompt is sent, the banner is   nformative data. avoid information fingerprinting

Banner none

# Relevant only if the build included zlib which is responsible for traffic compression, in case OpenSSH suppots compression its recommended to 
# set to 'no' because there are known attack vectors on compressed encrypted SSL traffic, in theory possible with SSH traffic.
# use only in internal networks if needed.

Compression no

# Specifies if sshd should accept IPv4/IPv6/Both traffic, recommended to limit the parameter to the relevant traffic

AddressFamily inet 

# Does not impact security at all, displays a text after the user logs into the system. In case an unauthorized user got access to the system
# may reveal information if set in /etc/motd so be carefull what you put there. 

PrintMotd no

# Just prints the last time the logged user had logged previously, may be usefull to spot an unwanted access. 

PrintLastLog yes

# Sets the SSH_USER_AUTH variable in the environment of the shell session that contains the path to a file that contians auth methods
# as stated previously as less information you reveal the less a possible attacker can know.

ExposeAuthInfo no

# Specifies the location of the .pid file which stores the sshd process number, this number can be used by other programms that interact with the sshd process
# it does not impact the system from security perspective. 

PidFile /var/run/sshd.pid

# There is a standard in the community to change the default port number, thi tactic does noe impact security in any possible way, only requires additional small amount of time
# to discover the custom port. but adds complications in the form of explicitly spesifying the custom port whenever its beign used. 

Port 22

# AcceptEnv allows to define a variable name that will be passed from the clietns side to the sessions environment on the server. do not set any environemnt variables.
# use with caution, set variabels only to be used by machines in internal networks if needed, a user can pass in that variable what ever is wanted to be passed. 
# do not use ACceptEnv in the config file

#AcceptEnv

# This option allows to set a key:value pair for each session. usefull in some cases but still should be cautiously reviewed before using that option because users will have
# access to that key:value pair.

#SetEnv

# ========================================================================
#                    SESSIONS SECTION           
# ========================================================================

# This parameter defines the waiting time for user to input credentials, if no interaction is made by default after 120 seconds if inactivity
# the connection is terminated, recommended to change to 30 seconds, reduces brute force windwo attack, relevant only when password authentication
# method is beign used.

LoginGraceTime 30

# ========================================================================
#                 SYSTEM SPESIFIC SECTION           
# ========================================================================

# Allows connection only if the user is part of the specified groups.

#AllowGroups GROUP1 GROUP2

# The Same as AllowGroups just for users. Specified users are allowed to connect.

#AllowUsers USER1 USER2

# Opposite of AllowGroups, every user is checked if part of the specified groups.

#DenyGroups GROUP3 GROUP 4

# Every specified user is now allowed to connect.

#DenyUsers USER3 USER4

# This option allows you to set the pathname which will be set as the root path for the logged user, mostly used for SFTP but can also set a 'jail'
# for spesific users with the help of Match. the entire pathname should be with 755 mode. there are more requirements if applied to shell sessions.

#ChrootDirectory none

# A way of organizing you sshd configurations, usefull for seperating Match blocks from the general confgiuration. if you have a Match block its better to define it in a
# seperate file and use the Include option with the full pathname. does not impact security.

#Include